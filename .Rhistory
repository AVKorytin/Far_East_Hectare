mercator(coords[1:10,2:3], inverse = T)
mercator
coords[1:10,2:3]
coords[1:10,2:3][,1]
d <- as.numeric((as.matrix(coords[1:10,2:3])))
d
d <- as.numeric(coords[1:10,2:3])
as.matrix(coords[1:10,2:3])
as.numeric(as.matrix(coords[1:10,2:3]))
coords$x <- as.numeric(coords$x)
coords$y <- as.numeric(coords$y)
head(coords)
saveRDS(coords, "coords.Rds")
mercator(coords[1:10,2:3], inverse = T)
coords <- cbind(coords, mercator(coords, inverse = T))
coords <- cbind(coords, mercator(coords[,2:3], inverse = T))
head(coords)
saveRDS(coords, "coords.Rds")
require(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data = coords, lng=lon, lat=lat, popup=k)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=coords$lon, lat=coords$lat, popup=coords$k)
m
table(h1$region)
aggregate(k2 ~ region, h1, function(x) length(levels(factor(x))))
aggregate(k2 ~ region, subset(h1, h1$region == levels(factor(h1$region))[1] | h1$region == levels(factor(h1$region))[8]), function(x) length(levels(factor(x))))
aggregate(k2 ~ k, subset(h1, h1$region == levels(factor(h1$region))[1] | h1$region == levels(factor(h1$region))[8]), function(x) length(levels(factor(x))))
x <- aggregate(k2 ~ k, subset(h1, h1$region == levels(factor(h1$region))[1] | h1$region == levels(factor(h1$region))[8]), function(x) length(levels(factor(x))))
sort(x, decreasing = T)[1:10,]
x[order(x$k2, decreasing = T),][1:10,]
y <- aggregate(k2 ~ region, h1, function(x) length(levels(factor(x))))
sum(y$k2)
4048/sum(y$k2)
5367/9154
x1 <- aggregate(k2 ~ k, h1, function(x) length(levels(factor(x))))
x[order(x$k2, decreasing = T),][1:10,]
x[order(x$k2, decreasing = T),][1:20,]
x1[order(x$k2, decreasing = T),][1:10,]
x1[order(x1$k2, decreasing = T),][1:10,]
x1[order(x1$k2, decreasing = T),][1:15,]
head(h1$k2[h1$k == "28:02"])
head(h1$k2[h1$k == "28:02"], 100)
tail(h1$k2[h1$k == "28:02"], 100)
str(h1)
h1$k_ <- paste(h1$k, h1$k2, sep = ":")
h1$k0 <- gsub(":$","",h1$k)
head(h1)
h1$k0 <- gsub("(:$)","",h1$k)
head(h1)
h1$k0 <- gsub("[:$]","",h1$k)
head(h1)
h1$k0 <- gsub(":.+","",h1$k)
head(h1)
p <- aggregate(p ~ k_, subset(h1, h1$k0 != "27" & h1$k0 != "28"), median)
length(p)
length(levels(factor(h$k_)))
length(levels(factor(h1$k_)))
length(levels(factor(subset(h1, h1$k0 != "27" & h1$k0 != "28")$k_)))
length(k_)
p
median(1)
median(1,2)
median(1,2,3)
medianc((1,2))
median(c(1,2))
kk <- levels(factor(h1$k_))
head(kk)
sort(table(h1$k_), decreasing = T)[1:30]
length(kk)
length(k_)
sum(!(kk %in% k_))
sum(kk %in% k_)
head(kk)
head(k_)
sum(kk %in% coords$k)
sum(!(kk %in% coords$k))
kk_
head(k_)
kk_ <- paste0("http://pkk5.rosreestr.ru/#text=", gsub(":", "%3A", kk[!(kk %in% coords$k)]), "&type=2&app=search&opened=1")
head(kk_)
head(kk[!(kk %in% coords$k)])
sort(table(kk[!(kk %in% coords$k)]), decreasing = T)[1:30]
kk[!(kk %in% coords$k)][45:67]
kk2 <- strsplit(kk[!(kk %in% coords$k)], ":")
head(kk2)
sum(sapply(kk2, length)==3)
sum(sapply(kk2, length)!=3)
k3 <- as.data.frame(matrix(unlist(kk2), ncol = 3, byrow = TRUE))
head(k3)
table(k3$V1)
table(k3$V1, k3$V2)
table(k3$V2, k3$V1)
require(RSelenium)
checkForServer()
startServer(args=c("-Dwebdriver.chrome.driver=C:/Users/Korytin_Andrey/Documents/R/chromedriver.exe"),
log = FALSE, invisible = FALSE)
remDr <- remoteDriver(browserName = "chrome")
remDr$open(silent = TRUE)
l <- length(kk_)
coords2 <- data.frame(k = rep(NA, l), x = rep(NA, l), y = rep(NA, l), stringsAsFactors = F)
for(i in 1:10) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
i <- 1
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
coords2[1,]
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
coords2[1,]
for(i in 2:10) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
coords2[1:10,]
nchar("14449831.587909311")
for(i in 11:1000) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
for(i in 1001:2000) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
for(i in 2001:3000) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
saveRDS(coords2, "coords2.Rds")
setwd("~/R/Projects/Far_East_Hectare")
require(RSelenium)
checkForServer()
startServer(args=c("-Dwebdriver.chrome.driver=C:/Users/Korytin_Andrey/Documents/R/chromedriver.exe"),
log = FALSE, invisible = FALSE)
remDr <- remoteDriver(browserName = "chrome")
remDr$open(silent = TRUE)
i <- 3001
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
for(i in 3001:4000) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
l
for(i in 4001:5000) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
length(kk_)
for(i in 5001:5819) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
sum(coords2$k!=kk_)
head(coords2)
head(kk_)
sum(coords2$k!=kk[!(kk %in% coords$k)])
sum(duplicated(coords2$k))
x <- which(duplicated(coords2$k))
y <- which(coords2$k!=kk[!(kk %in% coords$k)])
sum(x!=y)
x
head(x)
head(x-1)
coords2[head(x),]
coords2[head(x)-1,]
coords2[41,]
kk_41
kk_[41]
kk_[40]
kk_[30:35]
coords2[30:35,]
for(i in x) {
url <- kk_[i]
remDr$navigate(url)
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
if (coords2$x[i]==coords2$x[i-1] | nchar(coords2$x[i]) > 22) {
remDr$refresh()
Sys.sleep(3)
a <- remDr$getCurrentUrl()
coords2$k[i] <- gsub("%3A", ":", gsub("(.*text=)|(&type=.*)", "", a[[1]]))
coords2$x[i] <- gsub("(.*x=)|(&y=.*)", "", a[[1]])
coords2$y[i] <- gsub("(.*y=)|(&z=.*)", "", a[[1]])
print(i)
}
}
sum(duplicated(coords2$k))
sum(coords2$k!=kk[!(kk %in% coords$k)])
saveRDS(coords2, "coords2.Rds")
str(coords)
str(coords2)
coords2$x <- as.numeric(coords2$x)
sum(is.na(coords2$x))
coords2[is.na(coords2$x),]
coords2$y <- as.numeric(coords2$y)
coords2[is.na(coords2$y),]
x=14264574.856249996&y=6682324.382782142
coords2[3331,2] <- 14264574.856249996
coords2[3331,3] <- 6682324.382782142
coords2 <- readRDS("coords2.Rds")
dim(coords2)
tail(coords2)
coords2 <- coords2[-nrow(coords2),]
tail(coords2)
coords2[c(3311,3409:3411),]
coords2[3311,3] <- 6682324.382782142
coords2[3311,2] <- 14264574.856249996
coords2[3409,2] <- 14265615.05805
coords2[3409,3] <- 6689761.348850001
coords2[3410,2] <- 14265308.25515
coords2[3410,3] <- 6688368.551
coords2[3411,2] <- 14265222.5795
coords2[3411,3] <- 6688086.0373
coords2$y <- as.numeric(coords2$y)
coords2$x <- as.numeric(coords2$x)
require(geosphere)
require(leaflet)
coords2 <- cbind(coords2, mercator(coords2[,2:3], inverse = T))
tail(coords2)
saveRDS(coords2, "coords2.Rds")
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=coords$lon, lat=coords$lat, popup=coords$k)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data = coords, lng=lon, lat=lat, popup=k)
with(coords, m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data = coords, lng=lon, lat=lat, popup=k))
m
with(coords2, m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data = coords, lng=lon, lat=lat, popup=k))
m
HEAD(coords)
m <- with(coords2, leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data = coords, lng=lon, lat=lat, popup=k))
m
which(coords2$k == "28:10:130011")
coords2[3953,]
which(coords2$x < 12*10^6)
which(coords$x < 12*10^6)
coords[which(coords$x < 12*10^6),]
coords2[which(coords2$x < 12*10^6),]
x <- which(coords2$x < 12*10^6)
x
dim(coords)
dim(p)
head(h1)
p <- aggregate(p ~ k_, subset(h1, h1$k_ %in% coords$k), median)
dim(p)
dim(subset(h1, h1$k_ %in% coords$k))
dim(table(subset(h1, h1$k_ %in% coords$k)$k_))
head(h)
h$k_ <- paste(h$k0, h$k1, h$k2, sep = ":")
length(levels(factor(k_)))
table(h$k0)
table(h1$k0)
length(levels(factor(h$k_)))
length(levels(factor(h1$k_)))
length(levels(factor(h$k_[h$k_ %in% coords$k])))
p <- aggregate(p ~ k_, subset(h, k_ %in% coords$k), median)
dim(p)
head(p)
head(coords)
sum(p$k_ != coords$k)
coords$p <- p$p
p <- aggregate(p ~ k_, subset(h, k_ %in% coords$k), c(median, length))
l <- aggregate(p ~ k_, subset(h, k_ %in% coords$k), length)
head(l)
coords$n <- l$p
f <- sp::SpatialPointsDataFrame(coords[,4:5], coords[,c(1,6,7)])
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~n, color = ~p, stroke = F, fillOpacity = 0.5)
summary(l$p)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n)/3, color = ~p, stroke = F, fillOpacity = 0.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorQuantile("YlOrRd", p), stroke = F, fillOpacity = 0.5)
colorQuantile("YlOrRd", head(f@data$p))
colorQuantile("YlOrRd", 1:10)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorQuantile("YlOrRd", log(p)), stroke = F, fillOpacity = 0.5)
summary(p$p)
summary(log(p$p))
summary(log(1+p$p))
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorQuantile("YlOrRd", log(1+p)), stroke = F, fillOpacity = 0.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorQuantile("YlOrRd", log(1+p)), stroke = F, fillOpacity = ~log(1+p))
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorQuantile("YlOrRd", log(1+p)), stroke = F, fillOpacity = ~log(1+p)/14)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorQuantile("YlOrRd", log(1+p)), stroke = F, fillOpacity = ~log(1+p)/7)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), fillColor = ~colorQuantile("YlOrRd", log(1+p)), stroke = F, fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, fillColor = ~colorQuantile("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, fillColor = ~pal(log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, color = ~qpal(log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, color = ~colorNumeric(log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, color = ~colorNumeric(log(1+p), 5), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, color = ~colorNumeric(as.numeric(log(1+p)), 5), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, fillColor = ~colorNumeric(as.numeric(log(1+p)), 5), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, fillColor = ~colorNumeric("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, color = ~colorNumeric("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, fill = T, color = ~colorNumeric("YlOrRd", log(n)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorNumeric("YlOrRd", log(n)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), color = ~colorNumeric("YlOrRd", log(1+n)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircles(radius = ~sqrt(n), stroke = F, fillColor = ~colorQuantile("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircles(radius = ~sqrt(n)*10, stroke = F, fillColor = ~colorQuantile("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircles(radius = ~sqrt(n)*10, stroke = F, color = ~colorQuantile("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, color = ~colorQuantile("YlOrRd", log(1+p)), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, color = ~colorQuantile("YlOrRd", 0.5), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, color = colorQuantile("YlOrRd", 0.5), fillOpacity = ~.5)
leaflet(f) %>% addTiles() %>%
addCircleMarkers(radius = ~sqrt(n), stroke = F, color = "red", fillOpacity = ~.5)
